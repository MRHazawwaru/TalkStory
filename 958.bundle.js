"use strict";(self.webpackChunkTalkStory=self.webpackChunkTalkStory||[]).push([[958],{741:(o,e,a)=>{a.d(e,{S8:()=>n,WW:()=>k,r7:()=>s,z4:()=>i});const t="bookmarks",r=()=>(console.log("openDB: Memulai pembukaan database..."),new Promise(((o,e)=>{const a=indexedDB.open("TalkStoryBookmarkDB",1);a.onupgradeneeded=o=>{console.log("openDB: onupgradeneeded dipanggil.");const e=o.target.result;e.objectStoreNames.contains(t)||(console.log("openDB: Membuat object store 'bookmarks'."),e.createObjectStore(t,{keyPath:"id"}))},a.onsuccess=()=>{console.log("openDB: Database berhasil dibuka."),o(a.result)},a.onerror=()=>{console.error("openDB: Kesalahan saat membuka database:",a.error),e(a.error)},a.onblocked=()=>{console.warn("openDB: Pembukaan database diblokir.")}}))),n=async o=>{try{const e=(await r()).transaction(t,"readwrite");return e.objectStore(t).put(o),console.log(`addBookmark: Berhasil menambahkan/memperbarui bookmark ${o.id}`),e.complete}catch(o){throw console.error("addBookmark: Gagal menambahkan bookmark:",o),o}},s=async o=>{try{const e=(await r()).transaction(t,"readwrite");return e.objectStore(t).delete(o),console.log(`removeBookmark: Berhasil menghapus bookmark ${o}`),e.complete}catch(o){throw console.error("removeBookmark: Gagal menghapus bookmark:",o),o}},i=async()=>{try{const o=(await r()).transaction(t,"readonly").objectStore(t);return new Promise(((e,a)=>{const t=o.getAll();t.onsuccess=()=>{console.log("getAllBookmarks: Berhasil mendapatkan semua bookmark."),e(t.result||[])},t.onerror=()=>{console.error("getAllBookmarks: Gagal mendapatkan semua bookmark:",t.error),a(t.error)}}))}catch(o){throw console.error("getAllBookmarks: Gagal membuka DB untuk getAllBookmarks:",o),o}},k=async o=>{try{const e=(await r()).transaction(t,"readonly").objectStore(t);return new Promise(((a,t)=>{const r=e.get(o);r.onsuccess=()=>{console.log(`isBookmarked: Status bookmark untuk ${o}: ${void 0!==r.result}`),a(void 0!==r.result)},r.onerror=()=>{console.error("isBookmarked: Gagal memeriksa bookmark:",r.error),t(r.error)}}))}catch(o){throw console.error("isBookmarked: Gagal membuka DB untuk memeriksa bookmark:",o),o}}},958:(o,e,a)=>{a.r(e),a.d(e,{default:()=>s});var t=a(741),r=a(465),n=a.n(r);class s{constructor(o){this.view=o,this._setupEventListeners(),this.init()}async init(){const o=await(0,t.z4)();await this.view.render(o)}_setupEventListeners(){this._boundBodyClickHandler=this._handleBodyClick.bind(this),document.body.addEventListener("click",this._boundBodyClickHandler)}_handleBodyClick(o){const e=document.getElementById("bookmark-section");if(!e||!e.contains(o.target))return;const a=o.target.closest(".detail-bookmark-btn");if(a){o.preventDefault();const e=JSON.parse(a.dataset.story);return void this.handleShowDetail(e)}const t=o.target.closest(".remove-bookmark-btn");if(t){o.preventDefault();const e=t.dataset.id;this.handleRemoveBookmark(e)}}destroy(){document.body.removeEventListener("click",this._boundBodyClickHandler)}async handleRemoveBookmark(o){await(0,t.r7)(o),n().fire({icon:"info",title:"Cerita dihapus dari bookmark",toast:!0,position:"top-end",timer:1500,showConfirmButton:!1}),this.init()}async handleRemoveBookmark(o){await(0,t.r7)(o),n().fire({icon:"info",title:"Cerita dihapus dari bookmark",toast:!0,position:"top-end",timer:1500,showConfirmButton:!1}),this.init()}async handleShowDetail(o){const e=await(0,t.WW)(o.id);this.view.showStoryDetailPopup(o,e,(async e=>{await(0,t.WW)(o.id)&&(await this.handleRemoveBookmark(o.id),e())}))}}}}]);