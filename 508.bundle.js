"use strict";(self.webpackChunkTalkStory=self.webpackChunkTalkStory||[]).push([[508],{508:(o,e,a)=>{a.r(e),a.d(e,{default:()=>c});var t=a(715),r=a(815),n=a(741),s=a(465),i=a.n(s);class c{constructor(o){this.view=o,this.init()}async init(){await this.view.render(),await this.loadStories()}async loadStories(){try{const o=localStorage.getItem("token"),e=await t.A.getStories(o),a=await Promise.all(e.listStory.map((async o=>{const e=o.lat&&o.lon?await(0,r.p)(o.lat,o.lon):"Tanpa Lokasi";return{...o,locationName:e}})));this.view.showStories(a),this.view.bindDetailButtons((async o=>{const e=await(0,n.WW)(o.id);this.view.showStoryDetailPopup(o,e,(async()=>{await(0,n.WW)(o.id)?(await(0,n.r7)(o.id),this.view.updateBookmarkButton(!1),i().fire({icon:"info",title:"Cerita dihapus dari bookmark",toast:!0,position:"top-end",timer:1500,showConfirmButton:!1})):(await(0,n.S8)(o),this.view.updateBookmarkButton(!0),i().fire({icon:"success",title:"Cerita disimpan ke bookmark",toast:!0,position:"top-end",timer:1500,showConfirmButton:!1}))}))}))}catch(o){console.error("Gagal memuat daftar cerita:",o),this.view.showAlert("Gagal","Gagal memuat cerita.","error")}}}},715:(o,e,a)=>{a.d(e,{A:()=>r});var t=a(642);const r={register:async(o,e,a)=>(await fetch(`${t.A.BASE_URL}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:o,email:e,password:a})})).json(),login:async(o,e)=>(await fetch(`${t.A.BASE_URL}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:o,password:e})})).json(),getStories:async o=>(await fetch(`${t.A.BASE_URL}/stories`,{headers:{Authorization:`Bearer ${o}`}})).json(),async addStory({token:o,description:e,image:a,lat:r,lon:n}){const s=new FormData;return s.append("description",e),s.append("photo",a),r&&n&&(s.append("lat",r),s.append("lon",n)),(await fetch(`${t.A.BASE_URL}/stories`,{method:"POST",headers:{Authorization:`Bearer ${o}`},body:s})).json()}}},741:(o,e,a)=>{a.d(e,{S8:()=>n,WW:()=>c,r7:()=>s,z4:()=>i});const t="bookmarks",r=()=>(console.log("openDB: Memulai pembukaan database..."),new Promise(((o,e)=>{const a=indexedDB.open("TalkStoryBookmarkDB",1);a.onupgradeneeded=o=>{console.log("openDB: onupgradeneeded dipanggil.");const e=o.target.result;e.objectStoreNames.contains(t)||(console.log("openDB: Membuat object store 'bookmarks'."),e.createObjectStore(t,{keyPath:"id"}))},a.onsuccess=()=>{console.log("openDB: Database berhasil dibuka."),o(a.result)},a.onerror=()=>{console.error("openDB: Kesalahan saat membuka database:",a.error),e(a.error)},a.onblocked=()=>{console.warn("openDB: Pembukaan database diblokir.")}}))),n=async o=>{try{const e=(await r()).transaction(t,"readwrite");return e.objectStore(t).put(o),console.log(`addBookmark: Berhasil menambahkan/memperbarui bookmark ${o.id}`),e.complete}catch(o){throw console.error("addBookmark: Gagal menambahkan bookmark:",o),o}},s=async o=>{try{const e=(await r()).transaction(t,"readwrite");return e.objectStore(t).delete(o),console.log(`removeBookmark: Berhasil menghapus bookmark ${o}`),e.complete}catch(o){throw console.error("removeBookmark: Gagal menghapus bookmark:",o),o}},i=async()=>{try{const o=(await r()).transaction(t,"readonly").objectStore(t);return new Promise(((e,a)=>{const t=o.getAll();t.onsuccess=()=>{console.log("getAllBookmarks: Berhasil mendapatkan semua bookmark."),e(t.result||[])},t.onerror=()=>{console.error("getAllBookmarks: Gagal mendapatkan semua bookmark:",t.error),a(t.error)}}))}catch(o){throw console.error("getAllBookmarks: Gagal membuka DB untuk getAllBookmarks:",o),o}},c=async o=>{try{const e=(await r()).transaction(t,"readonly").objectStore(t);return new Promise(((a,t)=>{const r=e.get(o);r.onsuccess=()=>{console.log(`isBookmarked: Status bookmark untuk ${o}: ${void 0!==r.result}`),a(void 0!==r.result)},r.onerror=()=>{console.error("isBookmarked: Gagal memeriksa bookmark:",r.error),t(r.error)}}))}catch(o){throw console.error("isBookmarked: Gagal membuka DB untuk memeriksa bookmark:",o),o}}},815:(o,e,a)=>{async function t(o,e){try{const a=`https://nominatim.openstreetmap.org/reverse?format=json&lat=${o}&lon=${e}`,t=await fetch(a,{headers:{"User-Agent":"TalkStoryApp/1.0"}}),r=(await t.json()).address||{};return`${r.village||r.town||r.city||""}, ${r.state||r.region||""}`}catch{return"Tanpa Lokasi"}}a.d(e,{p:()=>t})}}]);